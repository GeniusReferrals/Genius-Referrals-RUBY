# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module GeniusReferrals
  class PaymentMethod < BaseModel
    # The username
    # @return [String]
    attr_accessor :username

    # The description
    # @return [String]
    attr_accessor :description

    # Is the payment method active? (true, false)
    # @return [Binary]
    attr_accessor :is_active

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["username"] = "username"
        @hash["description"] = "description"
        @hash["is_active"] = "is_active"
      end
      @hash
    end

    def initialize(username = nil,
                   description = nil,
                   is_active = nil)
      @username = username
      @description = description
      @is_active = is_active
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        username = hash["username"]
        description = hash["description"]
        is_active = hash["is_active"]

        # Create object from extracted values
        PaymentMethod.new(username,
                          description,
                          is_active)
      end
    end
  end
end
