# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module GeniusReferrals
  class Advocate < BaseModel
    # The advocate's name
    # @return [String]
    attr_accessor :name

    # The advocate's last name
    # @return [String]
    attr_accessor :lastname

    # The advocate's email
    # @return [String]
    attr_accessor :email

    # The total amount of bonuses that the advocate must generate before being able to create a bonus redemption request.
    # @return [Integer]
    attr_accessor :payout_threshold

    # The advocate's avatar URL
    # @return [String]
    attr_accessor :avatar_url

    # Useful to store extra information about the advocate. e.g, the phone number, address, etc.
    # @return [String]
    attr_accessor :metadata

    # Whether or not the advocate is allowed to refer services/products (Useful when using the Full Widget template).
    # @return [Boolean]
    attr_accessor :can_refer

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["name"] = "name"
        @hash["lastname"] = "lastname"
        @hash["email"] = "email"
        @hash["payout_threshold"] = "payout_threshold"
        @hash["avatar_url"] = "avatar_url"
        @hash["metadata"] = "metadata"
        @hash["can_refer"] = "can_refer"
      end
      @hash
    end

    def initialize(name = nil,
                   lastname = nil,
                   email = nil,
                   payout_threshold = nil,
                   avatar_url = nil,
                   metadata = nil,
                   can_refer = true)
      @name = name
      @lastname = lastname
      @email = email
      @payout_threshold = payout_threshold
      @avatar_url = avatar_url
      @metadata = metadata
      @can_refer = can_refer
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        name = hash["name"]
        lastname = hash["lastname"]
        email = hash["email"]
        payout_threshold = hash["payout_threshold"]
        avatar_url = hash["avatar_url"]
        metadata = hash["metadata"]
        can_refer = hash["can_refer"] ||= true

        # Create object from extracted values
        Advocate.new(name,
                     lastname,
                     email,
                     payout_threshold,
                     avatar_url,
                     metadata,
                     can_refer)
      end
    end
  end
end
