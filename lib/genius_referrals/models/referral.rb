# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module GeniusReferrals
  class Referral < BaseModel
    # The referrals token
    # @return [String]
    attr_accessor :referred_advocate_token

    # The referral origin identifier
    # @return [String]
    attr_accessor :referral_origin_slug

    # The campaign identifier
    # @return [String]
    attr_accessor :campaign_slug

    # The http_referrer URL
    # @return [String]
    attr_accessor :http_referer

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["referred_advocate_token"] = "referred_advocate_token"
        @hash["referral_origin_slug"] = "referral_origin_slug"
        @hash["campaign_slug"] = "campaign_slug"
        @hash["http_referer"] = "http_referer"
      end
      @hash
    end

    def initialize(referred_advocate_token = nil,
                   referral_origin_slug = nil,
                   campaign_slug = nil,
                   http_referer = nil)
      @referred_advocate_token = referred_advocate_token
      @referral_origin_slug = referral_origin_slug
      @campaign_slug = campaign_slug
      @http_referer = http_referer
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        referred_advocate_token = hash["referred_advocate_token"]
        referral_origin_slug = hash["referral_origin_slug"]
        campaign_slug = hash["campaign_slug"]
        http_referer = hash["http_referer"]

        # Create object from extracted values
        Referral.new(referred_advocate_token,
                     referral_origin_slug,
                     campaign_slug,
                     http_referer)
      end
    end
  end
end
