# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module GeniusReferrals
  class AdvocatePatchForm < BaseModel
    # The advocate's name
    # @return [String]
    attr_accessor :name

    # The advocate's last name
    # @return [String]
    attr_accessor :lastname

    # The advocate's email
    # @return [String]
    attr_accessor :email

    # The advocate's email
    # @return [Integer]
    attr_accessor :payout_threshold

    # The total amount of bonuses that the advocate must generate before being able to create a bonus redemption request.
    # @return [Integer]
    attr_accessor :claimed_balance

    # The unclaimed balance
    # @return [Integer]
    attr_accessor :unclaimed_balance

    # The currency code
    # @return [String]
    attr_accessor :currency_code

    # The advocate's avatar URL
    # @return [String]
    attr_accessor :avatar_url

    # Useful to store extra information about the advocate. e.g, the phone number, address, etc.
    # @return [String]
    attr_accessor :metadata

    # Whether or not the advocate is allowed to refer services/products (Useful when using the Full Widget template).
    # @return [Boolean]
    attr_accessor :can_refer

    # The advocate's token
    # @return [String]
    attr_accessor :token

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["name"] = "name"
        @hash["lastname"] = "lastname"
        @hash["email"] = "email"
        @hash["payout_threshold"] = "payout_threshold"
        @hash["claimed_balance"] = "claimed_balance"
        @hash["unclaimed_balance"] = "unclaimed_balance"
        @hash["currency_code"] = "currency_code"
        @hash["avatar_url"] = "avatar_url"
        @hash["metadata"] = "metadata"
        @hash["can_refer"] = "can_refer"
        @hash["token"] = "token"
      end
      @hash
    end

    def initialize(name = nil,
                   lastname = nil,
                   email = nil,
                   payout_threshold = nil,
                   claimed_balance = nil,
                   unclaimed_balance = nil,
                   currency_code = nil,
                   avatar_url = nil,
                   metadata = nil,
                   can_refer = nil,
                   token = nil)
      @name = name
      @lastname = lastname
      @email = email
      @payout_threshold = payout_threshold
      @claimed_balance = claimed_balance
      @unclaimed_balance = unclaimed_balance
      @currency_code = currency_code
      @avatar_url = avatar_url
      @metadata = metadata
      @can_refer = can_refer
      @token = token
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        name = hash["name"]
        lastname = hash["lastname"]
        email = hash["email"]
        payout_threshold = hash["payout_threshold"]
        claimed_balance = hash["claimed_balance"]
        unclaimed_balance = hash["unclaimed_balance"]
        currency_code = hash["currency_code"]
        avatar_url = hash["avatar_url"]
        metadata = hash["metadata"]
        can_refer = hash["can_refer"]
        token = hash["token"]

        # Create object from extracted values
        AdvocatePatchForm.new(name,
                              lastname,
                              email,
                              payout_threshold,
                              claimed_balance,
                              unclaimed_balance,
                              currency_code,
                              avatar_url,
                              metadata,
                              can_refer,
                              token)
      end
    end
  end
end
